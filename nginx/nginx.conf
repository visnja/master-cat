error_log /var/log/ningx.log debug;
server {
	     # Binds the TCP port 80.
       listen 80;
	     # Defines the domain or subdomain name. 
       # If no server_name is defined in a server block then 
	     # Nginx uses the 'empty' name
       server_name master.cat;
	     # Redirect the traffic to the corresponding 
	     # HTTPS server block with status code 301
       return 301 https://$host$request_uri;
       }

server {
    listen 443 ssl;
    resolver 127.0.0.11 valid=30s;
    server_name  hadoop.master.cat;
    ssl_certificate /etc/nginx/conf.d/certs/master.cat.crt;
    ssl_certificate_key /etc/nginx/conf.d/certs/master.cat.key;    
    location / {
        set $target http://namenode:9870/;
        proxy_pass $target;
       
    }
}
server {
    listen 443 ssl;
    resolver 127.0.0.11 valid=30s;
    server_name  metabase.master.cat;
    ssl_certificate /etc/nginx/conf.d/certs/master.cat.crt;
    ssl_certificate_key /etc/nginx/conf.d/certs/master.cat.key;    
    location / {
        set $target http://metabase:3000/;
        proxy_pass $target;
       
    }
}
server {
    listen 443 ssl;
    resolver 127.0.0.11 valid=30s;
    server_name  hive.master.cat;
    ssl_certificate /etc/nginx/conf.d/certs/master.cat.crt;
    ssl_certificate_key /etc/nginx/conf.d/certs/master.cat.key;    
    location / {
        set $target http://hue:8888/;
        proxy_pass $target;
       
    }
}
server {
    listen 443 ssl;
    resolver 127.0.0.11 valid=30s;
    server_name  mlflow.master.cat;
    ssl_certificate /etc/nginx/conf.d/certs/master.cat.crt;
    ssl_certificate_key /etc/nginx/conf.d/certs/master.cat.key;    
    location / {
        set $target http://minio:9000/;
        proxy_pass $target;
       
    }
}
server {
    listen 443 ssl;
    resolver 127.0.0.11 valid=30s;
    server_name  spark.master.cat;
    ssl_certificate /etc/nginx/conf.d/certs/master.cat.crt;
    ssl_certificate_key /etc/nginx/conf.d/certs/master.cat.key;    
    location / {
        set $target http://spark-master:8080/;
        proxy_pass $target;
       
    }
}
server {
    listen 443 ssl;
    server_name  airflow.master.cat;
    ssl_certificate /etc/nginx/conf.d/certs/master.cat.crt;
    ssl_certificate_key /etc/nginx/conf.d/certs/master.cat.key;    
    location / {
        set $target http://host.docker.internal:8085/;
        proxy_pass $target;
       
    }
}